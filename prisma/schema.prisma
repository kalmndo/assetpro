// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model User {
    id               String  @id @default(cuid())
    name             String
    email            String  @unique
    image            String?
    password         String
    title            String
    departmentId     String
    departmentUnitId String?
    atasanId         String?

    atasan         User?           @relation("AtasanBawahan", fields: [atasanId], references: [id])
    bawahan        User[]          @relation("AtasanBawahan")
    UserRole       UserRole[]
    Department     Department      @relation(fields: [departmentId], references: [id])
    DepartmentUnit DepartmentUnit? @relation(fields: [departmentUnitId], references: [id])

    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt
    PermintaanBarang PermintaanBarang[]

    NotificationFrom Notification[] @relation("From")
    NotificationTo   Notification[] @relation("To")
}

model UserRole {
    id     String @id @default(cuid())
    roleId String
    userId String

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    role Role @relation(fields: [roleId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model PermintaanBarang {
    id         String @id @default(cuid())
    no         String @unique
    status     String
    perihal    String
    ruangId    String
    pemohondId String

    Pemohon                User                     @relation(fields: [pemohondId], references: [id])
    Ruang                  MasterRuang              @relation(fields: [ruangId], references: [id])
    PermintaanBarangBarang PermintaanBarangBarang[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model PermintaanBarangBarang {
    id           String @id @default(cuid())
    permintaanId String
    barangId     String
    status       String
    qty          Int
    qtyOrdered   Int
    qtyOut       Int
    uomId        String

    Permintaan                         PermintaanBarang                     @relation(fields: [permintaanId], references: [id])
    Barang                             MasterBarang                         @relation(fields: [barangId], references: [id])
    Uom                                MasterUnit                           @relation(fields: [uomId], references: [id])
    PermintaanBarangBarangSplit        PermintaanBarangBarangSplit[]
    PermintaanBarangBarangHistory      PermintaanBarangBarangHistory[]
    PermintaanBarangBarangKodeAnggaran PermintaanBarangBarangKodeAnggaran[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model PermintaanBarangBarangKodeAnggaran {
    id             String @id @default(cuid())
    pbbId          String
    kodeAnggaranId String

    Barang       PermintaanBarangBarang @relation(fields: [pbbId], references: [id])
    KodeAnggaran MasterKodeAnggaran     @relation(fields: [kodeAnggaranId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model PermintaanBarangBarangSplit {
    id     String  @id @default(cuid())
    pbbId  String
    desc   String
    status String
    qty    Int
    foto   String?

    Barang PermintaanBarangBarang @relation(fields: [pbbId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model PermintaanBarangBarangHistory {
    id     String @id @default(cuid())
    pbbId  String
    desc   String
    status String

    Barang PermintaanBarangBarang @relation(fields: [pbbId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// --------------------------- MASTER --------------------------------

model Department {
    id   String @id @default(cuid())
    name String

    User               User[]
    MasterKodeAnggaran MasterKodeAnggaran[]
    DepartmentUnit     DepartmentUnit[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model DepartmentUnit {
    id           String @id @default(cuid())
    name         String
    departmentId String

    Department Department @relation(fields: [departmentId], references: [id])
    User       User[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Role {
    id   String @id
    name String

    UserRole UserRole[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterBarangGolongan {
    id   String @id @default(cuid())
    name String
    code Int    @unique

    MasterBarangKategori MasterBarangKategori[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterBarangKategori {
    id         String @id @default(cuid())
    name       String
    code       Int
    classCode  String
    fullCode   String @unique
    golonganId String

    Golongan                MasterBarangGolongan      @relation(fields: [golonganId], references: [id])
    MasterBarangSubKategori MasterBarangSubKategori[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterBarangSubKategori {
    id         String @id @default(cuid())
    name       String
    code       Int
    classCode  String
    fullCode   String @unique
    kategoriId String

    Kategori                   MasterBarangKategori         @relation(fields: [kategoriId], references: [id])
    MasterBarangSuSubbKategori MasterBarangSubSubKategori[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterBarangSubSubKategori {
    id            String @id @default(cuid())
    name          String
    code          Int
    classCode     String
    fullCode      String @unique
    subKategoriId String

    SubKategori MasterBarangSubKategori @relation(fields: [subKategoriId], references: [id])

    createdAt    DateTime       @default(now())
    updatedAt    DateTime       @updatedAt
    MasterBarang MasterBarang[]
}

model MasterBarang {
    id               String  @id @default(cuid())
    image            String?
    name             String
    code             Int
    classCode        String
    fullCode         String  @unique
    subSubKategoriId String
    uomId            String
    deskripsi        String

    SubSubKategori         MasterBarangSubSubKategori @relation(fields: [subSubKategoriId], references: [id])
    Uom                    MasterUnit                 @relation(fields: [uomId], references: [id])
    PermintaanBarangBarang PermintaanBarangBarang[]
    MasterBarangUnit       MasterBarangUnit[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterBarangUnit {
    id       String @id @default(cuid())
    barangId String
    uomId    String

    Uom          MasterUnit   @relation(fields: [uomId], references: [id])
    MasterBarang MasterBarang @relation(fields: [barangId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterUnit {
    id   String @id @default(cuid())
    name String

    PermintaanBarangBarang PermintaanBarangBarang[]
    MasterBarang           MasterBarang[]
    MasterBarangUnit       MasterBarangUnit[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterRuang {
    id   String @id @default(cuid())
    name String

    PermintaanBarang PermintaanBarang[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterNomor {
    id            String  @unique
    name          String
    format        String
    reset         Int
    resetType     Int?
    currentNumber BigInt?
    currentMonth  Int
    currentYear   Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterKodeAnggaran {
    id           String @id @unique
    name         String
    departmentId String

    Department Department @relation(fields: [departmentId], references: [id])

    createdAt                          DateTime                             @default(now())
    updatedAt                          DateTime                             @updatedAt
    PermintaanBarangBarangKodeAnggaran PermintaanBarangBarangKodeAnggaran[]
}

model Notification {
    id     String  @id @default(cuid())
    fromId String
    toId   String
    link   String
    desc   String
    isRead Boolean

    From User @relation(name: "From", fields: [fromId], references: [id])
    To   User @relation(name: "To", fields: [toId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
