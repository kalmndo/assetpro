// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model User {
    id           String  @id @default(cuid())
    name         String
    email        String  @unique
    image        String?
    password     String
    title        String
    departmentId String
    atasanId     String?

    atasan     User?      @relation("AtasanBawahan", fields: [atasanId], references: [id])
    bawahan    User[]     @relation("AtasanBawahan")
    UserRole   UserRole[]
    Department Department @relation(fields: [departmentId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model UserRole {
    id     String @id @default(cuid())
    roleId String
    userId String

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    role Role @relation(fields: [roleId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Department {
    id   String @id @default(cuid())
    name String

    User User[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Role {
    id   String @id
    name String

    UserRole UserRole[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterBarangGolongan {
    id   String @id @default(cuid())
    name String
    code Int    @unique

    MasterBarangKategori MasterBarangKategori[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterBarangKategori {
    id         String @id @default(cuid())
    name       String
    code       Int
    classCode  String
    fullCode   String @unique
    golonganId String

    Golongan                MasterBarangGolongan      @relation(fields: [golonganId], references: [id])
    MasterBarangSubKategori MasterBarangSubKategori[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterBarangSubKategori {
    id         String @id @default(cuid())
    name       String
    code       Int
    classCode  String
    fullCode   String @unique
    kategoriId String

    Kategori                   MasterBarangKategori         @relation(fields: [kategoriId], references: [id])
    MasterBarangSuSubbKategori MasterBarangSubSubKategori[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterBarangSubSubKategori {
    id            String @id @default(cuid())
    name          String
    code          Int
    classCode     String
    fullCode      String @unique
    subKategoriId String

    SubKategori MasterBarangSubKategori @relation(fields: [subKategoriId], references: [id])

    createdAt    DateTime       @default(now())
    updatedAt    DateTime       @updatedAt
    MasterBarang MasterBarang[]
}

model MasterBarang {
    id               String @id @default(cuid())
    name             String
    code             Int
    classCode        String
    fullCode         String @unique
    subSubKategoriId String

    SubSubKategori MasterBarangSubSubKategori @relation(fields: [subSubKategoriId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MasterUnit {
    id   String @id @default(cuid())
    name String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
